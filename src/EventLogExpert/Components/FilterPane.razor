@using EventLogExpert.Shared.Components
@inherits FluxorComponent

@inject IState<AvailableFilterState> AvailableFilterState
@inject IState<EventLogState> EventLogState
@inject IState<FilterPaneState> FilterPaneState
@inject IState<SettingsState> SettingsState

<div class="filter-pane">

    <div class="filter-row">
        <div>
            <button class="button-primary" @onclick="AddFilter">
                <i class="bi bi-plus-circle"></i> Add Filter
            </button>

            @if (!_isDateFilterVisible)
            {
                <button class="button-primary" @onclick="AddDateFilter">
                    <i class="bi bi-plus-circle"></i> Add Date Filter
                </button>
            }
        </div>
        
        @if (FilterPaneState.Value.CurrentFilters.Any() || _isDateFilterVisible)
        {
            <div class="header-center">
                @if (FilterPaneState.Value.CurrentFilters.Any())
                {
                    <span>[Active Filters: @FilterPaneState.Value.CurrentFilters.Count()]</span>
                }
            </div>

            <span class="button-toggle header-justify-right" data-rotate="@MenuState" @onclick="ToggleMenu">
                <i class="bi bi-caret-up"></i>
            </span>
        }
    </div>

    <div class="filter-content" data-toggle="@MenuState">
        @if (_isDateFilterVisible)
        {
            <EditForm id="filter-form" Model="_model">
                <span>
                    After: <InputDate class="input-filter-datetime" Type="InputDateType.DateTimeLocal" 
                               @bind-Value="_model.After" disabled="@(!_canEditDate)" />
                </span>
                <span>
                    Before: <InputDate class="input-filter-datetime" Type="InputDateType.DateTimeLocal" 
                                @bind-Value="_model.Before" disabled="@(!_canEditDate)" />
                </span>

                @if (_canEditDate)
                {
                    <button class="button-save" @onclick="ApplyDateFilter">
                        <i class="bi bi-check-circle"></i> Apply
                    </button>
                }
                else
                {
                    <button class="button-save" @onclick="EditDateFilter">
                        <i class="bi bi-funnel"></i> Edit
                    </button>
                }
                <button class="button-remove" type="button" @onclick="RemoveDateFilter">
                    <i class="bi bi-dash-circle"></i> Remove
                </button>
            </EditForm>
        }

        @foreach (var item in FilterPaneState.Value.CurrentFilters)
        {
            <FilterRow Value="@item" />
        }
    </div>

</div>
