@using EventLogExpert.Shared.Components

@inherits FluxorComponent

@inject IState<AvailableFilterState> AvailableFilterState
@inject IState<FilterPaneState> FilterPaneState
@inject IState<SettingsState> SettingsState

<div class="filter-pane">

    <div class="filter-row">

        <div>
            <button class="button-primary" @onclick="AddFilter">
                <i class="bi bi-plus-circle"></i> Add Filter
            </button>
        </div>

        <div class="header-center">
            @if (FilterPaneState.Value.CurrentFilters.Any())
            {
                <span>[Active Filters: @FilterPaneState.Value.CurrentFilters.Count()]</span>
            }
        </div>

        <span class="button-toggle header-justify-right" data-rotate="@MenuState" @onclick="ToggleMenu">
            <i class="bi bi-caret-up"></i>
        </span>
    </div>

    <div class="filter-content" data-toggle="@MenuState">
        <EditForm id="filter-form" Model="_model" OnValidSubmit="ApplyDateFilter">
            <span>
                After: <InputDate class="input-filter-datetime" Type="InputDateType.DateTimeLocal" @bind-Value="_model.After" />
            </span>
            <span>
                Before: <InputDate class="input-filter-datetime" Type="InputDateType.DateTimeLocal" @bind-Value="_model.Before" />
            </span>

            <button class="button-save" type="submit">
                <i class="bi bi-check-circle"></i> Apply
            </button>
            <button class="button-remove" type="button" @onclick="ResetDateFilter">
                <i class="bi bi-dash-circle"></i> Reset
            </button>
        </EditForm>

        @foreach (var item in FilterPaneState.Value.CurrentFilters)
        {
            <FilterRow Value="@item" />
        }
    </div>

</div>
