@inherits FluxorComponent

@inject IState<EventLogState> EventLogState
@inject IState<FilterPaneState> FilterPaneState
@inject IState<SettingsState> SettingsState

<div class="table-container">
    <table id="eventTable">
        <thead>
            <tr>
                @if (SettingsState.Value.ShowLogName)
                {
                    <th id="logname">Log Name</th>
                }
                @if (SettingsState.Value.ShowComputerName)
                {
                    <th id="computername">Computer</th>
                }
                <th id="level">Level</th>
                <th id="time">
                    Date and Time
                    <span class="button-toggle" data-rotate="@IsDateTimeDescending" @onclick="ToggleDateTime">
                        <i class="bi bi-caret-up"></i>
                    </span>
                </th>
                <th id="source">Source</th>
                <th id="id">Event ID</th>
                <th id="task">Task Category</th>
                <th id="description">Description</th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="@GetFilteredEvents()" Context="evt">
                <tr class="@GetCss(evt)" @key="evt.RecordId" @onfocus="() => SelectEvent(evt)" tabindex="0">
                    @if (SettingsState.Value.ShowLogName)
                    {
                        <td>@evt.OwningLog</td>
                    }
                    @if (SettingsState.Value.ShowComputerName)
                    {
                        <td>@evt.ComputerName</td>
                    }
                    <td>@evt.Level</td>
                    <td>@evt.TimeCreated.ConvertTimeZone(SettingsState.Value.TimeZone)</td>
                    <td>@evt.Source</td>
                    <td>@evt.Id</td>
                    <td>@evt.TaskCategory</td>
                    <td>@evt.Description</td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
</div>
