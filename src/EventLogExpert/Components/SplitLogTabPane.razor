@inherits FluxorComponent

@inject IState<EventLogState> EventLogState

@if (EventLogState.Value.ActiveLogs.Count > 1)
{
    <div class="tab-pane">
        <div class="tab-row">
            <div>
                <input type="radio" name="tab" id="log" checked @onclick="() => SetActiveLog(null)" />
                <label for="log" tabindex="0">Combined</label>
            </div>

            @{
                var logsTabSorted = EventLogState.Value.ActiveLogs.Values
                    .OrderBy(l => l.Events.FirstOrDefault()?.ComputerName)
                    .ThenBy(l => l.Events.FirstOrDefault()?.LogName)
                    .ToList();
            
                for (int i = 0; i < logsTabSorted.Count; i++)
                {
                    var log = logsTabSorted[i];
                    <div title="@GetTabTooltip(log)">
                        <input type="radio" name="tab" id="@($"log{i}")"
                            @onclick="() => SetActiveLog(log.Name)" />
                        <label for="@($"log{i}")" tabindex="0">@GetTabName(log)</label>
                    </div>
                }
            }
        </div>
    </div>
}
